# trading.py

import time

import cv2

from bot.control.interaction import find, find_and_click
from bot.control.mouse import click_left, set_mouse_position
from bot.core.status import get_status
from bot.matching.matcher import find_dialog_box_pos
from bot.matching.ocr import (
    extract_avaliable_energy,
    extract_cost,
    extract_energy_for_lower_price,
    extract_energy_for_raise_price,
    extract_max_energy,
)
from bot.screen import get_screen_shot
from bot.settings import GameStatus, get_settings
from bot.utility import pic_path


def go_chat() -> bool:
    """–ü–µ—Ä–µ—Ö–æ–¥–∏—Ç –≤ —á–∞—Ç. –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True –ø—Ä–∏ —É—Å–ø–µ—Ö–µ, False –ø—Ä–∏ –æ—Ç–∫–∞–∑–µ."""
    if not find_and_click("controls/chat"):
        return False

    if find("feilure"):
        if not find_and_click("controls/deny"):
            raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –æ—Ç–∫–∞–∑–∞ –æ—Ç —á–∞—Ç–∞.")
        return False

    return True


def step_trading():
    """
    –û–¥–∏–Ω —à–∞–≥ —Ç–æ—Ä–≥–æ–≤–æ–≥–æ —Ü–∏–∫–ª–∞: –æ—Ü–µ–Ω–∫–∞ –¥–∏–∞–ª–æ–≥–∞, –ø—Ä–∏–Ω—è—Ç–∏–µ —Ä–µ—à–µ–Ω–∏—è,
    –∫–ª–∏–∫ –ø–æ –Ω—É–∂–Ω–æ–π –∫–Ω–æ–ø–∫–µ.
    """
    settings = get_settings()
    status = get_status()
    if status != GameStatus.MAIN_WINDOW:
        print("Current status is ", status)
        raise RuntimeError("Not in main window, cannot start trading")

    possible_to_sell = [
        "obj_no_bg/armor/ash_trees",
        "obj_no_bg/accessories/spicy_granite",
        "obj_no_bg/armor/centurion_armor",
        "obj_no_bg/accessories/comfortable_pendant",
    ]

    screen = get_screen_shot()
    dialog_template_rgba = cv2.imread(pic_path("dialog_template"), cv2.IMREAD_UNCHANGED)

    dialog_pos = find_dialog_box_pos(screen, dialog_template_rgba, threshold=0.6)
    if dialog_pos is None:
        sell_dialog_template_rgba = cv2.imread(
            pic_path("sell_dialog_template"), cv2.IMREAD_UNCHANGED
        )
        dialog_pos = find_dialog_box_pos(screen, sell_dialog_template_rgba, threshold=0.6)

    if dialog_pos is None:
        print("‚ùóÔ∏è No dialog found, skipping trading step.")
        return

    print("üó®Ô∏è Found dialog at position:", dialog_pos)
    set_mouse_position(dialog_pos)
    click_left()
    time.sleep(get_settings().wt_click_sec)

    status = get_status()
    print("üí¨ Status:", status)
    max_energy = extract_max_energy()
    avaliable_energy = 0

    def get_avaliable_energy():
        avaliable_energy = extract_avaliable_energy()
        print(f"‚ö° Avaliable energy: {avaliable_energy}/{max_energy}")
        return avaliable_energy

    while status in (
        GameStatus.SELL_DIALOG,
        GameStatus.REFILL_DIALOG,
        GameStatus.BUY_DIALOG,
        GameStatus.SPECIAL_OFFER_DIALOG,
    ):
        # TODO: refactoring - create StateMachine

        if status == GameStatus.REFILL_DIALOG:
            if find_and_click("controls/deny") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è —Ç–æ–≤–∞—Ä–æ–≤.")
            status = get_status()
            continue
        if status == GameStatus.SPECIAL_OFFER_DIALOG:
            if find_and_click("controls/close") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ —Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è.")
            status = get_status()
            continue

        if status == GameStatus.BUY_DIALOG:
            if find_and_click("controls/chat") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –≤ –¥–∏–∞–ª–æ–≥–µ –ø–æ–∫—É–ø–∫–∏.")
            if find_and_click("controls/buy") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–∫—É–ø–∫–∏ –≤ –¥–∏–∞–ª–æ–≥–µ –ø–æ–∫—É–ø–∫–∏.")
            status = get_status()
            continue

        # –†–∞—Å—Å–∫–æ–º–º–µ–Ω—Ç–∏—Ä—É–π –µ—Å–ª–∏ –Ω–µ —Ö–æ—á–µ—à—å –ø—Ä–æ–¥–∞–≤–∞—Ç—å —Å–≤–æ–∏ —Ç–æ–≤–∞—Ä—ã
        # if find_and_click("controls/deny") is None:
        #    raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø—Ä–æ–¥–∞–∂–∏.")
        # status = get_status()
        # continue

        if find("series"):
            if find_and_click("controls/chat") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–∫—Ä—ã—Ç—å —á–∞—Ç –≤ –¥–∏–∞–ª–æ–≥–µ —Å–µ—Ä–∏–∏.")
            if find_and_click("controls/sell") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–æ–¥–∞–∂–∏ –≤ –¥–∏–∞–ª–æ–≥–µ —Å–µ—Ä–∏–∏.")
            status = get_status()
            continue

        cost = extract_cost()
        avaliable_energy = get_avaliable_energy()

        if cost < settings.cost_lower:
            energy_lower = extract_energy_for_lower_price()
            print("‚¨áÔ∏è Energy for lower price:", energy_lower)
            if energy_lower + avaliable_energy > max_energy:
                if find_and_click("controls/deny") is None:
                    raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø–æ–Ω–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã.")
                status = get_status()
                continue

            if not go_chat():
                status = get_status()
                continue

            if find("success") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–Ω–∏–∂–µ–Ω–∏–∏ —Ü–µ–Ω—ã.")
            avaliable_energy = get_avaliable_energy()

            if energy_lower + avaliable_energy > max_energy:
                if find_and_click("controls/deny") is None:
                    raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø–æ–Ω–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã.")
                status = get_status()
                continue

            if find_and_click("controls/lower_price") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–Ω–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã.")
        elif cost < settings.cost_same:
            if not go_chat():
                status = get_status()
                continue
            if find("success") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–≤—ã—à–µ–Ω–∏–∏ —Ü–µ–Ω—ã.")

        else:  # cost >= 500_000
            if not go_chat():
                status = get_status()
                continue
            if find("controls/success") is None:
                raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± —É—Å–ø–µ—à–Ω–æ–º –ø–æ–≤—ã—à–µ–Ω–∏–∏ —Ü–µ–Ω—ã.")

            energy_raise = extract_energy_for_raise_price()
            print("‚¨ÜÔ∏è Energy for raise price:", energy_raise)
            replaced_item = False
            if energy_raise > avaliable_energy:
                # –ü—ã—Ç–∞–µ–º—Å—è –Ω–∞–π—Ç–∏ –∏ –ø—Ä–µ–¥–ª–æ–∂–∏—Ç—å –¥—Ä—É–≥–æ–π —Ç–æ–≤–∞—Ä
                if len(possible_to_sell) > 0:
                    print("üîÑ Trying to sell another item...")
                    cdot_click_result = find_and_click("controls/cdot")
                    if cdot_click_result is not None:
                        for item in possible_to_sell:
                            if find_and_click(item):
                                replaced_item = True
                                print(f"‚úÖ Successfully clicked on {item}.")
                                break
                if replaced_item:
                    if find_and_click("controls/lower_price") is None:
                        raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–Ω–∏–∂–µ–Ω–∏—è —Ü–µ–Ω—ã.")
                else:
                    if find_and_click("controls/deny") is None:
                        raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–∫—Ä—ã—Ç—å –¥–∏–∞–ª–æ–≥ –æ—Ç–∫–∞–∑–∞ –æ—Ç –ø–æ–≤—ã—à–µ–Ω–∏—è —Ü–µ–Ω—ã.")
                    status = get_status()
                    continue
            else:
                if find_and_click("controls/raise_price_avaliable") is None:
                    raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –ø–æ–≤—ã—à–µ–Ω–∏—è —Ü–µ–Ω—ã.")

        if find_and_click("controls/sell") is None:
            raise RuntimeError("–ù–µ —É–¥–∞–ª–æ—Å—å –∫–ª–∏–∫–Ω—É—Ç—å –ø–æ –∫–Ω–æ–ø–∫–µ –ø—Ä–æ–¥–∞–∂–∏.")
        status = get_status()
